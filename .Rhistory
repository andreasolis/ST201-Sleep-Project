setwd("~/ST201-Sleep-Project")
#dat<-read.csv("sleepedit.csv",header=T) #pre-edited data, without aliased coefficients
dat<-read.csv("sleep.csv", header=T)
#dat<-read.csv("sleepedit.csv",header=T) #pre-edited data, without aliased coefficients
dat<-read.csv("sleep.csv", header=T)
#NumEarlyClass
2<-lm(CognitionZScore~ NumEarlyClass, data=dat)
#dat<-read.csv("sleepedit.csv",header=T) #pre-edited data, without aliased coefficients
dat<-read.csv("sleep.csv", header=T)
#testing for outliers in DASScore
1<-lm(CognitionZscore~ DASScore, data=dat)
#testing for outliers in DASScore
m1<-lm(CognitionZscore~ DASScore, data=dat)
m1<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m1,row.names = FALSE,"DASScore.outliers.csv")
#dat<-read.csv("sleepedit.csv",header=T) #pre-edited data, without aliased coefficients
dat<-read.csv("sleepcut.csv", header=T)
m1<-lm(CognitionZscore~ DASScore, data=dat)
m1<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m1,row.names = FALSE,"DASScore.outliers.csv")
#NumEarlyClass
m2<-lm(CognitionZScore~ NumEarlyClass, data=dat)
m2<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m2,row.names = FALSE,"NumEarlyClass.outliers.csv")
#GPA
m3<-lm(CognitionZscore~ GPA, data=dat)
m3<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m3,row.names = FALSE,"GPA.outliers.csv")
#ClassesMissed
m4<-lm(CognitionZscore~ ClassesMissed, data=dat)
m4<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m4,row.names = FALSE,"ClassesMissed.outliers.csv")
#CognitionZScore
m5<-lm(DASScore~CognitionZscore, data=dat)
m5<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m5,row.names = FALSE,"CognitionZScore.outliers.csv")
#PoorSLeepQuality
m6<-lm(CognitionZscore~ PoorSLeepQuality, data=dat)
m6<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m6,row.names = FALSE,"PoorSLeepQuality.outliers.csv")
#Happiness
m7<-lm(CognitionZscore~ Happiness, data=dat)
m7<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m7,row.names = FALSE,"Happiness.outliers.csv")
#Drinks
m8<-lm(CognitionZscore~ Happiness, data=dat)
m8<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m8,row.names = FALSE,"Happiness.outliers.csv")
#WeekdaySleep
m9<-lm(CognitionZscore~ WeekdaySleep, data=dat)
m9<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m9,row.names = FALSE,"WeekdaySleep.outliers.csv")
#WeekendSleep
m10<-lm(CognitionZscore~ WeekendSleep, data=dat)
m10<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m10,row.names = FALSE,"WeekendSleep.outliers.csv")
#AverageSleep
m11<-lm(CognitionZscore~ AverageSleep, data=dat)
m11<-data.frame(Stand.Res=cbind(round(rstandard(lm2),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
write.csv(m11,row.names = FALSE,"AverageSleep.outliers.csv")
#testing for outliers in DASScore
m1<-lm(CognitionZscore~ DASScore, data=dat)
m1.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m1),2),Lev=round(hatvalues(lm2),2),Cooks=round(cooks.distance(lm2),2)))
m1.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m1),2),Lev=round(hatvalues(m1),2),Cooks=round(cooks.distance(m1),2)))
write.csv(m1.outliers,row.names = FALSE,"DASScore.outliers.csv")
#testing for outliers in DASScore
m1<-lm(CognitionZscore~ DASScore, data=dat)
m1.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m1),2),Lev=round(hatvalues(m1),2),Cooks=round(cooks.distance(m1),2)))
write.csv(m1.outliers,row.names = FALSE,"DASScore.outliers.csv")
#NumEarlyClass
m2<-lm(CognitionZScore~ NumEarlyClass, data=dat)
m2.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m2),2),Lev=round(hatvalues(m2),2),Cooks=round(cooks.distance(m2),2)))
write.csv(m2.outliers,row.names = FALSE,"NumEarlyClass.outliers.csv")
#GPA
m3<-lm(CognitionZscore~ GPA, data=dat)
m3.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m3),2),Lev=round(hatvalues(m3),2),Cooks=round(cooks.distance(m3),2)))
write.csv(m3.outliers,row.names = FALSE,"GPA.outliers.csv")
#ClassesMissed
m4<-lm(CognitionZscore~ ClassesMissed, data=dat)
m4.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m4),2),Lev=round(hatvalues(m4),2),Cooks=round(cooks.distance(m4),2)))
write.csv(m4.outliers,row.names = FALSE,"ClassesMissed.outliers.csv")
#CognitionZScore
m5<-lm(DASScore~CognitionZscore, data=dat)
m5.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m5),2),Lev=round(hatvalues(m5),2),Cooks=round(cooks.distance(m5),2)))
write.csv(m5.outliers,row.names = FALSE,"CognitionZScore.outliers.csv")
#PoorSLeepQuality
m6<-lm(CognitionZscore~ PoorSLeepQuality, data=dat)
m6.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m6),2),Lev=round(hatvalues(m6),2),Cooks=round(cooks.distance(m6),2)))
write.csv(m6.outliers,row.names = FALSE,"PoorSLeepQuality.outliers.csv")
#Happiness
m7<-lm(CognitionZscore~ Happiness, data=dat)
m7.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m7),2),Lev=round(hatvalues(m7),2),Cooks=round(cooks.distance(m7),2)))
write.csv(m7.outliers,row.names = FALSE,"Happiness.outliers.csv")
#Drinks
m8<-lm(CognitionZscore~ Happiness, data=dat)
m8.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m8),2),Lev=round(hatvalues(m8),2),Cooks=round(cooks.distance(m8),2)))
write.csv(m8.outliers,row.names = FALSE,"Happiness.outliers.csv")
#WeekdaySleep
m9<-lm(CognitionZscore~ WeekdaySleep, data=dat)
m9.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m9),2),Lev=round(hatvalues(m9),2),Cooks=round(cooks.distance(m9),2)))
write.csv(m9.outliers,row.names = FALSE,"WeekdaySleep.outliers.csv")
#WeekendSleep
m10<-lm(CognitionZscore~ WeekendSleep, data=dat)
m10.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m10),2),Lev=round(hatvalues(m10),2),Cooks=round(cooks.distance(m10),2)))
write.csv(m10.outliers,row.names = FALSE,"WeekendSleep.outliers.csv")
#AverageSleep
m11<-lm(CognitionZscore~ AverageSleep, data=dat)
m11.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m11),2),Lev=round(hatvalues(m11),2),Cooks=round(cooks.distance(m11),2)))
write.csv(m11.outliers,row.names = FALSE,"AverageSleep.outliers.csv")
setwd("~/ST201-Sleep-Project/outliers")
#PoorSLeepQuality
m6<-lm(CognitionZscore~ PoorSleepQuality, data=dat)
m6.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m6),2),Lev=round(hatvalues(m6),2),Cooks=round(cooks.distance(m6),2)))
write.csv(m6.outliers,row.names = FALSE,"PoorSLeepQuality.outliers.csv")
write.csv(m6.outliers,row.names = FALSE,"PoorSleepQuality.outliers.csv")
m6.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m6),2),Lev=round(hatvalues(m6),2),Cooks=round(cooks.distance(m6),2)))
write.csv(m6.outliers,row.names = FALSE,"PoorSleepQuality.outliers.csv")
#NumEarlyClass
m2<-lm(CognitionZScore~ NumEarlyClass, data=dat)
#NumEarlyClass
m2<-lm(CognitionZscore~ NumEarlyClass, data=dat)
m2.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m2),2),Lev=round(hatvalues(m2),2),Cooks=round(cooks.distance(m2),2)))
m2.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m2),2),Lev=round(hatvalues(m2),2),Cooks=round(cooks.distance(m2),2)))
write.csv(m2.outliers,row.names = FALSE,"NumEarlyClass.outliers.csv")
#testing for outliers in DASScore
m1<-lm(CognitionZscore~ DASScore, data=dat)
#Drinks
m8<-lm(CognitionZscore~ Drinks, data=dat)
m8.outliers<-data.frame(Stand.Res=cbind(round(rstandard(m8),2),Lev=round(hatvalues(m8),2),Cooks=round(cooks.distance(m8),2)))
write.csv(m8.outliers,row.names = FALSE,"Drinks.outliers.csv")
setwd("~/ST201-Sleep-Project")
#forwards
null=lm(CognitionZscore~1,data=dat)
full=lm(CognitionZscore~.,data=dat)
step(null, scope=list(lower=null, upper=full),direction="forward")
#backwards
step(null, scope=list(lower=null, upper=full),direction="backward")
#backwards
step(null, scope=list(lower=null, upper=full),direction="backward")
#backwards
step(null, scope=list(upper=full),direction="backward")
#backwards
step(full,direction="backward")
#subset
install.packages('leaps')
library(leaps)
leaps<-regsubsets(CognitionZscore ~.,data = dat)
leaps<-regsubsets(CognitionZscore ~.-DASScore,data = dat)
plot(leaps,scale="adjr2")
#lm(formula = CognitionZscore ~ GPA + Gender + StressScore + ClassesMissed + AnxietyStatus, data = dat)
mforwards<-lm(CognitionZscore ~ GPA + Gender + StressScore + ClassesMissed + AnxietyStatus, data = dat)
summary(mforwards)
#lm(formula = CognitionZscore ~ Gender + NumEarlyClass + EarlyClass + GPA + StressScore, data = dat)
mbackward<-lm(CognitionZscore ~ Gender + NumEarlyClass + EarlyClass + GPA + StressScore, data = dat)
summary(mbackward)
summary(mbackward) #this model looks really good!!! all variables significant :)
#suggests WeekdayRise DepressionStatussevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise + DepressionStatussevere+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise + DepressionStatussevere+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise + DepressionStatussevere+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise + DepressionStatusSevere+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
plot(leaps,scale="adjr2")
dat$DepressionStatus<-relevel(dat$DepressionStatus, ref="moderate")
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise + DepressionStatusSevere+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise + DepressionStatus$Severe+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise +DepressionStatusSevere+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
#dat<-read.csv("sleepedit.csv",header=T) #pre-edited data, without aliased coefficients
dat<-read.csv("sleepcut.csv", header=T,dat$DepressionStatus<-relevel(dat$DepressionStatus, ref="moderate")) #missing first 10 rows so we can test with this later
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise +DepressionStatusSevere+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat,dat$DepressionStatus<-relevel(dat$DepressionStatus, ref="moderate") )
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise +factor(DepressionStatus)+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender, data=dat)
summary(msubsets)
#suggests WeekdayRise DepressionStatusSevere StressScore ClassesMissed GPA EarlyClass NumEarlyClass Gender
msubsets<-lm(CognitionZscore~ WeekdayRise +factor(DepressionStatus)+StressScore+ClassesMissed+GPA+EarlyClass+NumEarlyClass+Gender-factor(DepressionStatus)normal, data=dat)
summary(msubsets)
summary(mbackward) #this model looks really good!!! all variables significant :)
vif(msubsets)
install.packages('car')
library(car)
vif(msubsets)
vif(mbackward)
vif(mforwards)
